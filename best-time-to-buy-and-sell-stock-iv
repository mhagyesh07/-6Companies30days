class Solution {
public:
    int maxProfit(int K, vector<int>& prices) {
        int n=prices.size();
        vector<vector<vector<int>>>dp(n+1,vector<vector<int>>(2,vector<int>(K+1,0)));
        // vector<int>cur(2,0),prev(2,0);

        for(int i=n-1;i>=0;i--)
        {
            for(int j=1;j>=0;j--)
            {   
                for(int k=1;k<=K;k++)
                {   
                    if(j==0) dp[i][j][k]=max(-1*prices[i]+dp[i+1][1][k],dp[i+1][0][k]);
                    else dp[i][j][k]=max(prices[i]+dp[i+1][0][k-1],dp[i+1][1][k]);
                }
            }
        }
        return dp[0][0][K];
    }
    
};
